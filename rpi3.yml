{{- $architecture := or .architecture "armhf" -}}
{{ $suite :=  "buster" }}
{{- $variant := or .variant "default" -}}
{{ $image := or .image (printf "debian-rpi3-%s-%s-%s.tar.xz" $variant $suite $architecture) }}
{{ $repo := or .repo "https://debian-pm-tools.github.io/apt-repo" }}

architecture: {{ $architecture }}

actions:
  - action: debootstrap
    suite: {{ $suite }}
    components:
      - main
    mirror: https://deb.debian.org/debian
    variant: minbase

    # Add debian-pm repository and disable gpg check since we don't have a keyring yet.
    # It's still pretty secure thanks to https
  - action: run
    description: Prepare installing the keyring
    chroot: true
    command: echo "deb [trusted=yes] {{ $repo }} {{ $suite }} main" > /etc/apt/sources.list.d/debian-pm.list

    # Install the keyring
  - action: apt
    packages:
      - debian-pm-archive-keyring

    # Turn on the gpg check again
  - action: run
    description: Add final debian-pm repository
    chroot: true
    command: echo "deb {{ $repo }} {{ $suite }} main" > /etc/apt/sources.list.d/debian-pm.list

  - action: apt
    recommends: false
    packages:
      - linux-image-{{ $architecture }}
      - u-boot-rpi

  - action: overlay
    source: raspi3-overlay

# Plasma Mobile packages
# Only installed if variant is plamo
{{ if eq $variant "plamo" }}
  - action: apt
    packages:
      - simplelogin
      - kwin-wayland
      - plasma-phone-components
      - kwin-wayland-backend-drm
      - plasma-phone-settings
      - kinfocenter
      - kirigami-gallery
      - plasma-discover
      - qtvirtualkeyboard-plugin
      - plasma-nm
      - telegram-desktop
      - qml-module-ofono
      - telepathy-ofono-ril-mc-plugin
      - kaidan
      - koko
      - plasma-angelfish
      - glosbit
      - llsvplayer

  - action: run
    chroot: true
    script: scripts/setup-user.sh

  - action: run
    chroot: true
    script: scripts/setup-plasma-env.sh
{{end}}

  - action: image-partition
    imagename: {{ $image }}
    imagesize: 2GB
    partitiontype: msdos
    mountpoints:
      - mountpoint: /
        partition: root
      - mountpoint: /boot/firmware
        partition: firmware
        options: [ x-systemd.automount ]
    partitions:
      - name: firmware
        fs: fat32
        start: 0%
        end: 64MB
      - name: root
        fs: ext4
        start: 64MB
        end: 100%
        flags: [ boot ]

  - action: filesystem-deploy
    description: Deploying filesystem onto image

  - action: run
    postprocess: true
    command: bmaptool create {{ $image }} > {{ $image }}.img.bmap

  - action: run
    postprocess: true
    command: xz -f {{ $image }}
